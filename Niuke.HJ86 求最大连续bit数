//求一个int类型数字对应的二进制数字中1的最大连续数，例如3的二进制为00000011，最大连续2个1
#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> vec;
    while(n>0)
    {
        vec.push_back(n%2);
        n = n/2;
    }
    vector<int> vee;
    for(int i=0;i<vec.size();i++)
    {
        int cnt = 1;
        if(vec[i] == 1) 
        {
            for(int j=i+1;j<vec.size();j++)
            {
                if(vec[j] == 1) {cnt++;continue;}
                else break;
            }
            vee.push_back(cnt);
        }
    }
    int max = 0;
    for(int i=0;i<vee.size();i++)
    {
        if(vee[i]> max) max = vee[i];
    }
    cout << max;
}
// 64 位输出请用 printf("%lld")
