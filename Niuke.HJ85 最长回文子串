/*
给定一个仅包含小写字母的字符串，求它的最长回文子串的长度。
所谓回文串，指左右对称的字符串。
所谓子串，指一个字符串删掉其部分前缀和后缀（也可以不删）的字符串
*/
#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
using namespace std;

int main() {
    string str, s1, s2;
    cin >> str;
    vector<int>vec;
    for (int i = 0; i < str.length(); i++) {
        for (int j = 2; j <= str.length(); j++) {
            if (i + j <= str.length()) {
                s1 = str.substr(i, j);
                reverse(s1.begin(), s1.end());
                s2 = str.substr(i, j);
                if (s1 == s2) {
                    vec.push_back(j);
                }
            }
        }
    }
    int max = 0;
    for (int i = 0; i < vec.size(); i++) {
        if (vec[i] > max) max = vec[i];
    }
    cout << max;
}
// 64 位输出请用 printf("%lld")
